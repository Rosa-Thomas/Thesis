"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("./index");
const http_caching_chain_1 = __importDefault(require("./http-caching-chain"));
const util_1 = require("./util");
class MultiBeaconNode {
    baseUrl;
    options;
    constructor(baseUrl, options = index_1.defaultChainOptions) {
        this.baseUrl = baseUrl;
        this.options = options;
    }
    async chains() {
        const chains = await (0, util_1.jsonOrError)(`${this.baseUrl}/chains`);
        if (!Array.isArray(chains)) {
            throw Error(`Expected an array from the chains endpoint but got: ${chains}`);
        }
        return chains.map((chainHash) => new http_caching_chain_1.default(`${this.baseUrl}/${chainHash}`), this.options);
    }
    async health() {
        const response = await fetch(`${this.baseUrl}/health`);
        if (!response.ok) {
            return {
                status: response.status,
                current: -1,
                expected: -1
            };
        }
        const json = await response.json();
        return {
            status: response.status,
            current: json.current ?? -1,
            expected: json.expected ?? -1,
        };
    }
}
exports.default = MultiBeaconNode;
//# sourceMappingURL=multi-beacon-node.js.map