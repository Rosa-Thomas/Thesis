"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Buffer = exports.roundAt = exports.roundTime = exports.defaultChainUrl = exports.defaultChainInfo = exports.HttpCachingChain = exports.HttpChainClient = exports.nonRFCMainnetClient = exports.mainnetClient = exports.testnetClient = exports.timelockDecrypt = exports.timelockEncrypt = void 0;
const drand_client_1 = require("drand-client");
Object.defineProperty(exports, "HttpChainClient", { enumerable: true, get: function () { return drand_client_1.HttpChainClient; } });
Object.defineProperty(exports, "HttpCachingChain", { enumerable: true, get: function () { return drand_client_1.HttpCachingChain; } });
Object.defineProperty(exports, "roundTime", { enumerable: true, get: function () { return drand_client_1.roundTime; } });
Object.defineProperty(exports, "roundAt", { enumerable: true, get: function () { return drand_client_1.roundAt; } });
const buffer_1 = require("buffer");
Object.defineProperty(exports, "Buffer", { enumerable: true, get: function () { return buffer_1.Buffer; } });
const timelock_encrypter_1 = require("./drand/timelock-encrypter");
const age_encrypt_decrypt_1 = require("./age/age-encrypt-decrypt");
const armor_1 = require("./age/armor");
const timelock_decrypter_1 = require("./drand/timelock-decrypter");
const defaults_1 = require("./drand/defaults");
Object.defineProperty(exports, "defaultChainInfo", { enumerable: true, get: function () { return defaults_1.defaultChainInfo; } });
Object.defineProperty(exports, "defaultChainUrl", { enumerable: true, get: function () { return defaults_1.defaultChainUrl; } });
const version_1 = require("./version");
async function timelockEncrypt(roundNumber, payload, chainClient) {
    const timelockEncrypter = (0, timelock_encrypter_1.createTimelockEncrypter)(chainClient, roundNumber);
    const agePayload = await (0, age_encrypt_decrypt_1.encryptAge)(payload, timelockEncrypter);
    return (0, armor_1.encodeArmor)(agePayload);
}
exports.timelockEncrypt = timelockEncrypt;
async function timelockDecrypt(ciphertext, chainClient) {
    const timelockDecrypter = (0, timelock_decrypter_1.createTimelockDecrypter)(chainClient);
    let cipher = ciphertext;
    if ((0, armor_1.isProbablyArmored)(ciphertext)) {
        cipher = (0, armor_1.decodeArmor)(cipher);
    }
    return await (0, age_encrypt_decrypt_1.decryptAge)(cipher, timelockDecrypter);
}
exports.timelockDecrypt = timelockDecrypt;
const userAgentOpts = {
    userAgent: `tlock-js-${version_1.LIB_VERSION}`
};
function testnetClient() {
    const opts = {
        ...drand_client_1.defaultChainOptions,
        chainVerificationParams: {
            chainHash: defaults_1.TESTNET_CHAIN_INFO.hash,
            publicKey: defaults_1.TESTNET_CHAIN_INFO.public_key,
        }
    };
    const chain = new drand_client_1.HttpCachingChain(defaults_1.TESTNET_CHAIN_URL, opts);
    return new drand_client_1.HttpChainClient(chain, opts, userAgentOpts);
}
exports.testnetClient = testnetClient;
function mainnetClient() {
    const opts = {
        ...drand_client_1.defaultChainOptions,
        chainVerificationParams: {
            chainHash: "52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971",
            publicKey: "83cf0f2896adee7eb8b5f01fcad3912212c437e0073e911fb90022d3e760183c8c4b450b6a0a6c3ac6a5776a2d1064510d1fec758c921cc22b0e17e63aaf4bcb5ed66304de9cf809bd274ca73bab4af5a6e9c76a4bc09e76eae8991ef5ece45a"
        }
    };
    const chain = new drand_client_1.HttpCachingChain(defaults_1.MAINNET_CHAIN_URL, opts);
    return new drand_client_1.HttpChainClient(chain, opts, userAgentOpts);
}
exports.mainnetClient = mainnetClient;
function nonRFCMainnetClient() {
    const opts = {
        ...drand_client_1.defaultChainOptions,
        chainVerificationParams: {
            chainHash: "dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493",
            publicKey: "a0b862a7527fee3a731bcb59280ab6abd62d5c0b6ea03dc4ddf6612fdfc9d01f01c31542541771903475eb1ec6615f8d0df0b8b6dce385811d6dcf8cbefb8759e5e616a3dfd054c928940766d9a5b9db91e3b697e5d70a975181e007f87fca5e"
        }
    };
    const chain = new drand_client_1.HttpCachingChain(defaults_1.MAINNET_CHAIN_URL_NON_RFC, opts);
    return new drand_client_1.HttpChainClient(chain, opts, userAgentOpts);
}
exports.nonRFCMainnetClient = nonRFCMainnetClient;
//# sourceMappingURL=index.js.map